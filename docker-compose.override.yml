# docker-compose.override.yml
version: '3.1'

services:

  spark-master:
    image: bitnami/spark:3.5.5
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
      - SPARK_MASTER_WEBUI_PORT=8081
    ports:
      - "8081:8081"
      - "7077:7077"
    volumes:
      - spark-data:/bitnami
      - ./include:/usr/local/airflow/include
      - ./apps:/opt/spark-apps
      - ./data:/opt/spark-data
    networks:
      - airflow

  spark-worker:
    image: bitnami/spark:3.5.5
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=3G
      - SPARK_WORKER_CORES=2
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    volumes:
      - ./include:/usr/local/airflow/include
      - spark-data:/bitnami
      - ./apps:/opt/spark-apps
      - ./data:/opt/spark-data
    depends_on:
      - spark-master
    networks:
      - airflow
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure

  # Serviço de armazenamento de objetos (MINIO)
  minio:
    image: minio/minio:RELEASE.2025-04-22T22-12-26Z
    container_name: minio
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"   # Endpoint S3
      - "9001:9001"   # Console web
    volumes:
      - ~/minio-data:/data
    networks:
      - airflow

  # Serviço para criar os buckets no MINIO (init)
  minio-init:
    image: minio/mc:RELEASE.2025-04-16T18-13-26Z
    container_name: minio-init
    depends_on:
      - minio
    entrypoint: ["/bin/sh", "-c"]
    command: >
      "sleep 10 &&
       mc alias set datalake http://minio:9000 minioadmin minioadmin &&
       mc mb datalake/landing &&
       mc mb datalake/bronze &&
       mc mb datalake/silver &&
       mc mb datalake/gold"
    restart: "no"
    networks:
      - airflow

  trino-coordinator:
    container_name: trino
    image: trinodb/trino:latest
    hostname: trino-coordinator
    environment:
      - TRINO_ENVIRONMENT=production
    ports:
      - 8085:8080
    depends_on:
      - minio-init
    volumes:
      - ./trino:/etc/trino
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/v1/info"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    networks:
      - airflow

  trino-worker:
    image: trinodb/trino:latest
    container_name: trino-worker
    hostname: trino-worker
    environment:
      - TRINO_ENVIRONMENT=production
      - TRINO_DISCOVERY_URI=http://trino-coordinator:8080
    depends_on:
      - trino-coordinator
    volumes:
      - ./trino:/etc/trino
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/v1/info"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    networks:
      - airflow

  trino-init:
    image: trinodb/trino:latest
    entrypoint: [ "/bin/sh", "-c", "sleep 30 && trino --server trino-coordinator:8080 -f /docker-entrypoint-initdb.d/create_schemas.sql" ]
    volumes:
      - ./init_trino/create_schemas.sql:/docker-entrypoint-initdb.d/create_schemas.sql  
    depends_on:
      trino-coordinator:
        condition: service_healthy
      trino-worker:
        condition: service_healthy
    networks:
      - airflow

  mariadb:
    container_name: mariadb
    hostname: mariadb
    image: mariadb:10.5.8
    ports:
      - 3307:3306
    environment:
      - MYSQL_ROOT_PASSWORD=admin
      - MYSQL_USER=admin
      - MYSQL_PASSWORD=admin
      - MYSQL_DATABASE=metastore_db
    networks:
      - airflow

  hive-metastore:
    container_name: hive-metastore
    hostname: hive-metastore
    image: 'bitsondatadev/hive-metastore:latest'
    ports:
      - 9083:9083 # Metastore Thrift
    volumes:
      - ./hive/metastore-site.xml:/opt/apache-hive-metastore-3.0.0-bin/conf/metastore-site.xml:ro
    environment:
      - METASTORE_DB_HOSTNAME=mariadb
    depends_on:
      - mariadb
    networks:
      - airflow

  superset:
    image: apache/superset:3.0.0
    container_name: superset
    ports:
      - "8088:8088"
    environment:
      # credenciais do usuário administrador inicial
      SUPERSET_SECRET_KEY: "replace_this_with_a_real_secret"
      ADMIN_USERNAME: admin
      ADMIN_PASSWORD: admin
      ADMIN_EMAIL: admin@superset.local
    volumes:
      - ./superset_home:/app/superset_home
    depends_on:
      - hive-metastore
      - trino-coordinator
      - minio
    command: >
      /bin/sh -c "
      superset db upgrade &&
      superset fab create-admin --username $${ADMIN_USERNAME} --firstname Superset --lastname Admin --email $${ADMIN_EMAIL} --password $${ADMIN_PASSWORD} || true &&
      superset init &&
      superset run -h 0.0.0.0 -p 8088"

volumes:
  spark-data:
  trino-data:
  hive-metastore-db-data: